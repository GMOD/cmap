# ----------------------------------------------------
#
# cmap.conf
#
# Edit this file to customize the look and behavior of
# the CMap application.  The only sections that *must* 
# be set are "database," "template_dir" and "cache_dir."
#
# Remember that your webserver must be restarted to 
# enact any changes here.
#
# ----------------------------------------------------

#
# Enable this config file
#

is_enabled 1

#
# Database connection parameters
#
# You can only specify one database sections per conf file.
# If you wish to add more, you must make a different conf file.
# The database name must be unique across all conf files in this dir.
#
# Parameters:
#
#   name      : A nickname for the connection, shows up in lists
#   datasource: The string passed to DBI to connect to the database
#   user      : The user name to connect to the database
#   password  : The password to connect to the database
#   is_default: Either "1" or "0," only required if defining 
#               multiple data sources
#
<database>
    name       CMAP
    datasource dbi:mysql:CMAP
    user       mysql
    password
    is_default 1
</database>

#
# Configure more as needed...
#
#<database>
#    name       BarDB
#    datasource dbi:mysql:BAR
#    user       guest
#    password   password
#</database>

#
#Using expanded cmap_correspondence_lookup table
#
# Set to 1 if your cmap_correspondence_lookup table is the
#  expanded version that looks like this:
#
# explain cmap_correspondence_lookup;
# +---------------------------+--------------+
# | Field                     | Type         |
# +---------------------------+--------------+
# | feature_id1               | int(11)      |
# | feature_id2               | int(11)      |
# | feature_correspondence_id | int(11)      |
# | start_position1           | double(11,2) |
# | start_position2           | double(11,2) |
# | stop_position1            | double(11,2) |
# | stop_position2            | double(11,2) |
# | map_id1                   | int(11)      |
# | map_id2                   | int(11)      |
# | feature_type_accession1   | varchar(20)  |
# | feature_type_accession2   | varchar(20)  |
# +---------------------------+--------------+
                                                                                
expanded_correspondence_lookup 0


#   
# ----------------------------------------------------
#
# Start optional settings
#
# ----------------------------------------------------

#
# Introductory texts for various pages.
#
cmap_home_intro <<EOF
Welcome to the genetic and comparative maps.
EOF

#map_viewer_intro <<EOF
#EOF

feature_search_intro <<EOF
A <b>feature</b> in CMap is any element that can be placed on a
map, either as a point or an interval.  
EOF

#feature_type_info_intro <<EOF
#EOF

#map_type_info_intro <<EOF
#EOF

#species_info_intro <<EOF
#EOF

matrix_intro <<EOF
Each cell in the matrix shows the number of correspondences between
apair of maps.  A correspondence is any relationship between
two features. 
EOF

#map_set_info_intro <<EOF
#EOF

#
# When making name-based correspondences, the default behavior is to
# allow correspondences between features of the *exact* same type.  If
# you wish to expand the feature types allowed when making name-based
# correspondences, then add their accession IDs to this section.  The
# relationships will be reciprocal, so if you say "foo bar" then
# correspondences from features with the accession ID "foo" will be
# allowed to those with the accession ID "bar" and vice versa.
# Separate feature types with spaces.  Assert all equivalent feature
# types on one line, e.g., "foo bar baz."
# Default: Nothing
#
#add_name_correspondence foo bar baz
#add_name_correspondence fee fie

# Any entries to "disallow_name_correspondence" will cause the admin
# tool to NOT make correspondences between features of the types listed.
# Either list the feature type accessions separated by spaces on one
# line or individually on separate lines, e.g.:
#
# disallow_name_correspondence centromere qtl
# - or -
# disallow_name_correspondence centromere
# disallow_name_correspondence qtl
#

#
# The background color of the map image
# Values: any color found in the COLORS array of Bio::GMOD::CMap::Constants
# To view this file, either look in the "lib" directory of the original
# CMap source directory, or, if you have the very handy "pmtools" installed
# on your system, type "pmcat Bio::GMOD::CMap::Constants" on your 
# command-line.
# Default: lightgoldenrodyellow
#
background_color lightgoldenrodyellow

#
# The color of the line connecting feature correspondences
# Values: COLORS
# Default: lightblue
# 
connecting_line_color lightblue

#
# Cookie domain
# Default: commented out
#
#cookie_domain .foo.org

#
# Turn on/off debug statements
# Values: 1 or 0
# Default: 1
#
debug 1

#
# Default color of a feature if the feature type's "color" is "Default"
# Values: COLORS
# Default: black
#
feature_color black

#
# Color of box around a highlighted feature
# Values: COLORS
# Default: red
#
feature_highlight_fg_color red

#
# Color of background behind a highlighted feature
# Values: COLORS
# Default: yellow
#
feature_highlight_bg_color yellow

#
# Color of a feature label when it has a correspondence
# Comment out to use the feature's own color
# Values: COLORS
# Default: red
#
feature_correspondence_color red

#
# Default font size
# Values: small, medium, large
# Default: small
#
font_size small

#
# Which field in cmap_feature to search in 
# feature search if none specified
# Values: feature_name, alternate_name, both
# Default: feature_name
#
feature_search_field feature_name

#
# Default size of images
# Values: small, medium, large
# Default: small
#
image_size small

#
# Default image format
# Values: png, jpeg
# Default: png
#
image_type png

#
# Which features to show by default
# Values: none, landmarks, all
# Default: all
#
label_features all

#
# Default color of a map if the "color" field of both the map type
# and the map set are "Default"
# Values: any color found in the COLORS array of Bio::GMOD::CMap::Constants
# Default: lightgrey
#
map_color lightgrey

#
# The titles to put atop the individual maps, e.g., "Wheat-2M"
# Your choices will be stacked in the order defined
# Values: species_name, map_set_name (short_name), map_name
# Default: species_name, map_set_name (short_name), map_name
#
map_titles species_name 
map_titles map_set_name 
map_titles map_name

#
# Default width of the maps
# Value: any number from 1 to 10
# Default: 8
#
map_width 8

#
# Title to use on the matrix correspondence page
# Value: a string
# Default: Welcome to the Matrix
#
matrix_title Welcome to the Matrix

#
# The smallest any map can be drawn, in pixels
# Values: any positive integer (within reason)
# Default: 20
#
min_map_pixel_height 20

#
# The maximum number of elements that can appear on a page
# (like in search results)
# Set to "0" or a negative number or comment out to disable
# Values: any positive integer (within reason)
# Default: 25
#
max_child_elements 25

#
# How many pages of results to show in searches
# Set to "0" (or a negative number) or comment out to disable
# Values: any positive integer (within reason)
# Default: 10
#
max_search_pages 10

#
# The number of positions to have flanking zoomed areas.
# Default: 3
#
number_flanking_positions 3

#
# Whether or not to display only features with 
# correspondences on relational maps
# Default: 1
#
relational_maps_show_only_correspondences 1

#
# The colors of the slot background and border.
# Values: COLORS
# Default: background = beige, border = khaki
#
slot_background_color beige
slot_border_color khaki

#
# Stylesheet
# Default: /cmap/cmap.css
#
stylesheet /cmap/cmap.css

#
# Name of the cookie holding user preferences
# Default: CMAP_USER_PREF
#
user_pref_cookie_name CMAP_USER_PREF

#
# scalable_units
# units (such as bp) that can be used to scale the maps
# against each other.
#
<scalable>
    bp 1
    cm 0
</scalable>


#
# Drawing information for Feature type
#

#Notice the area_code, required_page_code and extra_forms
#  The area_code is perl code that will be used to create the javascript
#    for features/maps being described.  It will be inserted in the area map
#    over the object.  $code is a variable that holds the javascript, so
#    append all new code to the $code variable.  Some of the variables
#    from the underlying CMap code are accessable to this code.
#
#  The required_page_code lists the names of required page_code (described
#    later) needed to perform the tasks in area_code.  The page_code is 
#    added to the top of the page and is most likely going to be functions
#    to be called.
#
#  The extra_forms contains the names of extra_forms (described later)
#    which contain extra form elements.  This is so the admin can add
#    text fields, buttons, etc. 
#

<feature_type contig>
feature_type_accession contig
feature_type Contig
default_rank 1
color
shape span 
drawing_lane 1
drawing_priority 1
area_code <<EOF
$code=sprintf("onMouseOver=\"window.status='%s';return true\"",$feature->{'feature_type_aid'});
$code.=sprintf(" onClick=\"demo('%s')\";",$feature->{'feature_id'});
EOF
required_page_code democode
extra_forms 
</feature_type>

<feature_type read>
feature_type_accession read
feature_type Read
default_rank 1 
color
shape up-arrow
drawing_lane 2
drawing_priority 1
area_code <<EOF
$code=sprintf("onMouseOver=\"window.status='%s';return true\"",$feature->{'feature_type_aid'});
$code.=sprintf(" onClick=\"demo('%s')\";",$feature->{'feature_id'});
EOF
required_page_code democode
extra_forms 
</feature_type>

<feature_type far_apart>
feature_type_accession far_apart
feature_type Reads Too Far Apart
default_rank 1
color black
shape span 
drawing_lane 3
drawing_priority 1
</feature_type>


<evidence_type ANB>
evidence_type_accession ANB
evidence_type Automated name-based
rank 1
color 
</evidence_type>

<map_type Seq>
map_type_accession Seq
map_type Sequence
map_units bp
is_relational_map 
width 1
shape box
color 
display_order 1
</map_type>

#  The page_code is made up of javascript that is to perform the tasks in 
#    map/feature area_code.  The page_code is
#    added to the top of the page and is most likely going to be functions
#    to be called.



<page_code democode>
page_code <<EOF
<script type="text/javascript">
function demo(txt){    
   alert('txt');
}
</script>
EOF
</page_code>

#  The extra_forms contain extra form elements.  This is so the admin can add
#    text fields, buttons, etc.  The demmo is commented out but can be used
#    build more interesting form elements.


#<extra_form feature_list>
#extra_form <<EOF
#<tr><td align="right">Feature List:</td>
#<td><input type=text name='featureList'>
#<input type=BUTTON onClick="clearFeatureList();" value='clear' id='clear'>
#<input type=Submit onClick="return changeFormAction('/cgi-bin/launch_test.cgi');" value='Submit' >
#</td></tr>
#EOF
#</form_extras>
