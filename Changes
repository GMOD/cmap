                      Revision history for CMap

0.08   2003-08-01 

-   Added ability to view all maps in reference map set
-   Added "cmap_feature_note" table to allow free text notes on features
-   Changed legend text back to using color of feature type
-   Fixed bugs in admin feature search, made as powerful as user search
-   Removed custom data paging code (Utils::paginate) in favor of 
    Data::Pageset, pager modeled after PubMed
-   Added "cmap_map_cache" helper table to consolidate and reduce 
    number of SQL calls
-   Added map buttons for info, details, delete, flip, and new view
-   Altered database indices for improved performance
-   Added "view_feature_on_map" handler to quickly get from a feature
    accession ID to a view of it on a map

0.07    2003-05-30

-   Fixed bug in cmap_admin.pl which referenced deprecate "linkage_group"
    field
-   Altered import code to use Text::RecordParser
-   Fixed drawing bugs for spanning features with negative coordinates
-   Changed "span" shape to not extend all the way to the map (was too
    easily overdrawing other spans)
-   Significant changes in drawing code to allow relational maps of
    varying widths that don't collide with map titles or other maps,
    this also fixed a very old bug (#688326)
-   Fixed bug (#729138) where features weren't being properly deleted 
    when loading a map in "overwrite" mode
-   Added ability to collapse overlapping features
-   Changed some text in legend to use black rather than image colors 
    to improve readability

0.06    2003-04-17

-   Fixed bug (#657917) where last page of features on map view in web
    admin tool was showing too many rows in feature table
-   Added separate BUGS and TODO files so they are not lost in the 
    Changes file
-   Added a generic feature search to web admin tool
-   Added new "paginate" sub to Utils for creating pages of recordsets
    for web navigation, added better and more standard paging to 
    user feature search and most of the admin pages that return what
    could be a large recordset
-   Fixed bug (#660483) where "IO::Tee=GLOB(0x4d7900)" was being printed
    while exporting data as SQL statements in cmap_admin.pl
-   Added a DESTROY method to base class to disconnect database so that
    "Database handle destroyed without explicit disconnect" error   
    messages wouldn't appear
-   Cleaned up many of the admin templates to make them more consistent
-   Added "is_enabled" field to "cmap_feature_correspondence" to allow a
    curator to permanently disable a feature correspondence record
    For MySQL:
    alter table cmap_feature_correspondence add is_enabled tinyint \
        not null default '1'; 
    For Oracle:
    alter table cmap_feature_correspondence add is_enabled number(4) \
        default '1' not null;
    For PostgreSQL:  PG doesn't allow the addition of a "NOT NULL"
    field, nor was I able to find an easy way to add such a constraint,
    so I dumped the data, dropped the table and recreated it with the
    definition in the create file
-   Added "drawing_lane" field to cmap_feature_type so that a curator 
    can determine the lane for drawing features (thereby placing some
    feature types closer to the map)
    For MySQL:
    alter table cmap_feature_type add drawing_lane int(11) not null \
        default '1';
    For Oracle:
    alter table cmap_feature_type add drawing_lane number(4) \
        default '1' not null;
    For PostgreSQL:  Same as above on "is_enabled" field
-   Added "drawing_priority" field to cmap_feature_type so that a curator 
    can determine the order for drawing features within a lane 
    For MySQL:
    alter table cmap_feature_type add drawing_priority int(11) not null \
        default '1';
    For Oracle:
    alter table cmap_feature_type add drawing_priority number(4) \
        default '1' not null;
    For PostgreSQL:  Same as above on "is_enabled" field
-   Added conditions to SQL for the matrix that all the map sets selected
    must have "is_enabled=1"
-   Changed label distribution on maps to wait until after all the 
    features for a lane have been drawn, then sort by position, whether 
    the feature is highlighted, and whether the feature has a 
    correspondence
-   Added new DATA_CURATION document in "docs" directory to describe how
    to curate data using CMap tools
-   Added a legend to explain feature glyphs
-   Added watermark of "CMap" version number in lower-right corner of 
    legend hyperlinked to the GMOD-CMap website
-   Added code to allow a dbxref with only a name to be accepted (so a 
    curator can block out an cross-reference on a feature with "Not 
    available")
-   Added ability to search for multiple features in the admin tool
-   Added ability to choose quote escaping style in cmap_admin.pl when
    exporting data as SQL INSERT statements
-   Fixed bug (#665326) where SQL for finding map features was missing 
    spanning features (with both start and stop positions) when the given
    range started after the feature's start position
-   Changed ambiguously named element "include_features" on main CMap 
    form to "label_features" in preparation for allowing users to actually
    choose which feature types to show.  Be sure to use the new "cmap.conf"
    if you're upgrading (or change "include_features" to "label_features")
-   Added restriction by feature type to map detail page
-   Changed link to map details page for non-relational maps to be a 
    question mark underneath the map rather than a click on the whole
    map;  this is less ambiguous and also frees up the map for clicking
    to zoom on specific areas
-   Added ability to restrict correspondences by type
-   Changed "score" in "cmap_correspondence_evidence" to a float
    For MySQL:
    alter table cmap_correspondence_evidence modify score double;
    For Oracle:
    alter table cmap_correspondence_evidence modify (score number(8,2));
    For PostgreSQL:
    alter table cmap_correspondence_evidence rename score to old_score;
    alter table cmap_correspondence_evidence add score double precision;
    update cmap_correspondence_evidence set score=old_score;
    alter table cmap_correspondence_evidence rename to foo;
    select correspondence_evidence_id, accession_id, \
        feature_correspondence_id, evidence_type_id, score, remark \
        into cmap_correspondence_evidence from foo;
    drop table foo;
-   Added "line_color" to "cmap_evidence_type" table
    For MySQL:
    alter table cmap_evidence_type add line_color varchar(20);
    For Oracle:
    alter table cmap_evidence_type add line_color varchar2(20);
    For PostgreSQL:
    alter table cmap_evidence_type add line_color character varying(20);
-   Added "title" attribute to map areas on templates for viewing maps
-   Changed "truncate table" in SQL for reloading of correpsondence
    matrix to be a more simple unqualified "delete from" in order to
    get around permissions in PostgreSQL (there was also some
    complaint earlier that this didn't work with some earlier version
    of MySQL)
-   Added "display_order" fields to "cmap_map"
    For MySQL:
    alter table cmap_map add display_order int(11) not null default '1';
    For Oracle:
    alter table cmap_map add display_order number(11) DEFAULT '1' CONSTRAINT \
        nn_cmap_map_display_order NOT NULL;
    For PostgreSQL:
    alter table cmap_map add display_order integer default '1' not null;
-   Fixed bug (#677777) where feature search in the web admin tool
    wasn't case-insensitive
-   Added trimming of whitespace on column names in data import
-   Added pagination to map set info page
-   Added coloring of correspondence lines based on evidence
-   Added new feature glyphs: up-arrow, down-arrow, double-arrow, 
    filled-box, in-triangle, and out-triangle
-   Expanded legend into feature types and evidence types
-   Added support for multiple data sources
-   Added option to not overwrite map info when importing via cmap_admin.pl
-   Added exporting of feature correspondence via cmap_admin.pl
-   Added dbxref_name and dbxref_url to feature export in cmap_admin.pl
-   Added cmap-schema.png, a diagram of the tables
-   Removed DATA_IMPORT, DATA_CURATION from docs, consolidated into new
    ADMINSTRATION document
-   Fixed bug in user feature search where "All" choice for features types and
    species wasn't working
-   Added acceptance of multiple evidence codes (separated by commas) in
    feature correspondence import file
-   Removed Bio::GMOD::CMap::Drawer::Feature
-   Added minimum number of correspondences restriction
-   Added deleting of maps and map sets to cmap_admin.pl
-   Added view of color palette in web admin tool
-   Added ability to create automated name-based correspondences between
    features of different types via cmap.conf options
-   Added quoted string support to feature search
-   Increased size of all "double" fields (in MySQL declarations) from 8 to 11
-   Added experimental throttling measures (see ADMINISTRATION)
-   Added ability to highlight features by primary name, alternate name
    or accesssion ID
-   Added ability to highlight features with embedded spaces in the name

0.05    2002-12-17
-   Added extra split tokens to highlight string in map detail page 
    as features weren't being highlighted in the table when 
    multiple highlighted features were specified with anything other
    than a comma
-   Added all original parameters in the URL for resorting the 
    feature table on the map detail page
-   Fixed bug in admin map view that showed all features and a 
    broken pager
-   Fixed bug in admin feature search that broke in Oracle because
    double quotes were used instead of single quotes
-   Fixed bad URL in admin home page that pointed to "/maps" instead
    of "/cmap"
-   Fixed bad HTML in admin feature create/edit templates that didn't
    show feature type because of a missing "</SELECT>"
-   Fixed SQL in matrix that actually caused a server error, which
    should never happen
-   Added missing "</HTML>" tags to templates "feature_search.tmpl,"
    "feature_detail.tmpl," and "error.tmpl"
-   Added "alternate_name" to SQL for feature search (was expected by
    interface but never returned by code)
-   Added appropriate ending to feature search template (was missing
    call to page object's "end_body" method, important for Gramene)
-   Fixed bug in admin when adding a feature correspondence (see bug
    #632053)
-   Fixed a bug that allowed a feature to extend beyond the current
    map range if it wanted to
-   Added "alternate_name" to SQL for feature correspondences table of
    the feature detail page (interface was expecting it)
-   Fixed misplaced angle brackets in feature search template
-   Changed order of options on admin feature edit page that made IE
    set the "is_landmark" option to "yes" when it wasn't originally set
-   Added back in "use DBI;" statement to main CMap.pm module to
    prevent "Can't call method..." errors
-   Fixed errors in loading SQL driver in data module
-   Got rid of "cmap_dump.pl" as that logic has been moved into
    cmap_admin.pl
-   Added a schema for PostgreSQL and started initial testing

0.04    2002-10-11

-   Added "cmap_dump.pl" script to help dump CMap tables as
    database-independent "INSERT" statements
-   Put dump of entire Gramene database on GMOD site
-   Fixed a bug where a feature's relative start/stop positions could
    return a value less than 0 or greater than 1, which could allow
    features to be drawn outside the bounds of a map
-   Fixed some bugs in admin templates where they weren't including
    the footer
-   Got rid of useless "help_footer" template
-   Added ability to tee the output of cmap_admin.pl actions to a log
    file in user's home directory
-   Fixed various import and correspondence routines to print so as to
    take advantage of log tee
-   Added IO::Tee dependency to Makefile and default perlstartup.pl
-   Moved "insert_correspondence" from Utils.pm into Admin.pm, added
    some logic to keep it from creating correspondences between
    relational maps
-   In jumbling around code, I had messed up some code that allowed
    automatic zooming of comparative maps when going to the
    "map_details" page
-   Made cmap_cache dir permissions '0700' on creation
-   Playing around with some ideas about automatic auditing of
    database changes.  Nothing implemented yet, but I'm considering a
    Bio::GMOD::CMap::DB class to inherit from DBI and override the "do"
    method.
-   Really cleaned up admin code for removing objects from the
    database, very important as I can't rely on referential integrity
    to do cascade deletes, dependency checking, etc.
-   Cleaned up code to handle catastrophic errors better (misplaced
    conf file, bad db connection info, bad template dir, etc.).
-   Improved POD in cmap_admin.pl
-   Improved INSTALL docs with feedback from beta testers

0.03    2002-09-26

Moved all the code to the namespace Bio::GMOD::CMap as the tool
became a part of the Generic Model Organism Database project
(http://www.gmod.org/).  

-   Added importing of correspondences (before there was only
    name-based)
-   Made install use ExtUtils::MakeMaker for "real" installation
-   Fixed bug in distribution of feature labels
-   Added frames around map "slots"
-   Added zooming on comparative maps in "map_details" and flanking
    markers
-   Added database cross-references to features
-   Fixed collisions of map titles
-   Added more to INSTALL file, moved some parts to DATA_IMPORT
-   Added sample data from Gramene project, maybe I'll have some other
    datasets in the future?  I'd also like to add a dump from MySQL.
-   Added "I-beam" shape for drawing maps
-   Changed database as such:
    *   Allow a feature to have specific db cross-references:
        alter table cmap_feature add dbxref_name varchar(32);
        alter table cmap_feature add dbxref_url varchar(200);
    *   Change the name of the "how_to_draw" column (awkward)
        alter table cmap_map_type change column how_to_draw 
            shape varchar(12);
        alter table cmap_feature_type change column how_to_draw 
            shape varchar(12);
        alter table cmap_map_set change column how_to_draw 
            shape varchar(12);
-   Fixed problem with spacing of maps and long titles
-   Removed old CSHL::* namespace

0.02    2002-07-31

Pretty much a complete rewrite of version 0.01.  Moved to the
namespace CSHL::CMap.  Much improved, but still pretty rough, esp. on
the installation and customization.

0.01  

The original version was called CSHL::ComparativeMaps as I developed
it for Cold Spring Harbor's Gramene project (http://www.gramene.org/).
It was pretty rough.  Be glad you aren't using it.
