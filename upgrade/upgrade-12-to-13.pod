# vim: tw=70:

=pod

=head1 NAME

upgrade-12-to-13.pod

=head1 SYNOPSIS

Where we discuss updating your database and config files from CMap's
version 0.12 to 0.13.

=head1 INTRODUCTION

Congratulations on your decision to upgrade from CMap version 0.12 to
0.13.  This guide will take you through how to modify your database
(and the data inside) as well as converting you configuration files.

Please make sure you back up both your database and you config files.
While this process has been tested, it is best not to take any
chances.

=head1 INSTALLING VERSION 0.13

The first thing that you want to do is move the old cmap.conf to a new
name or location.  Leaving the cmap.conf there will result in a failed
install.

 $ mv /usr/local/apache/cmap.conf /usr/local/apache/cmap.conf.v.12

Then run the build commands as you normally would 

 $ perl Build.PL
 $ ./Build
 $ su
 # ./Build install

Make sure the new template files have been added by doing a 

 # cp -f templates/*.tmpl /usr/local/apache/templates/cmap/

=head1 DATABASE UPDATE

To make the necessary changes to your database, please do the
following:

=over 4

=item * 

Either back up your database or create a new database to work on,
e.g., for MySQL:

  $ mysqldump cmap12 > cmap13.sql
  $ mysqladmin create cmap13
  $ mysql cmap13 < cmap13.sql

And then work on the "cmap13" database.

=item * 

Execute "cmap_12_to_cmap_13.sql" on your database.  This modifies your
data in place, which is why it is essential that you back up your data
in case anything happens during the upgrade process.  

With MySQL the command looks something like this:

  $ mysql -uroot -p CMAP < cmap_12_to_cmap_13.sql

Now your database should have some new columns that are filled with
data.

=back

=head1 CONFIGURATION FILE UPDATE

CMap version 0.13 has a new configuration scheme.  Whereas previously
there was just one configuration file for CMap (usually called
"cmap.conf"), now there are several config files stored in a
"cmap.conf" directory.  A "global.conf" file contains settings that
affect all of CMap, while each CMap data source now has its own config
files.  Anything in "cmap.conf" that ends in ".conf" is considered as
a config file.

To change to the new config file schema, please do the following:

=over 4

=item *

Go into your configuration directory:

  $ cd /usr/local/apache/conf/cmap.conf/

=item *

Run cmap12conftocmap13.pl on the old cmap.conf from the config db.

  $ /usr/local/src/cmap/upgrade/cmap12conftocmap13.pl ../cmap.conf.v0.12

This will create "global.conf" and one "cmap#.conf" for each data
source described in the original "cmap.conf" file.

=item *

Add the feature/map/evidence type information into the configs file
using "cmap_typetables_to_config.pl."  The script accepts either the
directory where all the files live (in which case it will process
everything ending in ".conf" but not the "global.conf" file), so:

  $ cmap_typetables_to_config.pl /path/to/cmap.conf/

Or, specify each config file separately:

  $ cmap_typetables_to_config.pl /path/to/cmap.conf/foo.conf
  

=back

=head1 CONCLUSION

That should do it for the databases and the configuration.  If you
have any troubles email the CMap developer's list:

  gmod-cmap@lists.sourceforge.net

=head1 AUTHOR

Ben Faga E<lt>faga@cshl.eduE<gt>.

=cut
