-- 
-- Created by SQL::Translator::Producer::Oracle
-- Created on Wed Mar 12 09:25:26 2008
-- 
-- We assume that default NLS_DATE_FORMAT has been changed
-- but we set it here anyway to be self-consistent.
ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';

--
-- Table: cmap_attribute
--

CREATE TABLE cmap_attribute (
  attribute_id number(11) DEFAULT '0' NOT NULL,
  table_name varchar2(30) DEFAULT '' NOT NULL,
  object_id number(11) DEFAULT '0' NOT NULL,
  display_order number(11) DEFAULT '1' NOT NULL,
  is_public number(4) DEFAULT '1' NOT NULL,
  attribute_name varchar2(200) DEFAULT '' NOT NULL,
  attribute_value clob NOT NULL,
  PRIMARY KEY (attribute_id)
)
TYPE    MyISAM;

CREATE INDEX table_name on cmap_attribute (table_name, object_id, display_order, attribute_name);

--
-- Table: cmap_correspondence_evidence
--

CREATE TABLE cmap_correspondence_evidence (
  correspondence_evidence_id number(11) DEFAULT '0' NOT NULL,
  correspondence_evidence_acc varchar2(30) DEFAULT '' NOT NULL,
  feature_correspondence_id number(11) DEFAULT '0' NOT NULL,
  evidence_type_acc varchar2(30) DEFAULT '0' NOT NULL,
  score number(8, 2) DEFAULT NULL,
  rank number(11) DEFAULT '0' NOT NULL,
  PRIMARY KEY (correspondence_evidence_id),
  CONSTRAINT correspondence_evidence_acc UNIQUE (correspondence_evidence_acc)
)
TYPE    MyISAM;

CREATE INDEX feature_correspondence_id on cmap_correspondence_evidence (feature_correspondence_id);

--
-- Table: cmap_feature
--

CREATE TABLE cmap_feature (
  feature_id number(11) DEFAULT '0' NOT NULL,
  feature_acc varchar2(30) DEFAULT '' NOT NULL,
  map_id number(11) DEFAULT '0' NOT NULL,
  feature_type_acc varchar2(30) DEFAULT '0' NOT NULL,
  feature_name varchar2(32) DEFAULT '' NOT NULL,
  is_landmark number(4) DEFAULT '0' NOT NULL,
  feature_start number(11, 2) DEFAULT '1' NOT NULL,
  feature_stop number(11, 2) DEFAULT NULL,
  default_rank number(11) DEFAULT '1' NOT NULL,
  direction number(4) DEFAULT '1' NOT NULL,
  PRIMARY KEY (feature_id),
  CONSTRAINT feature_acc UNIQUE (feature_acc)
)
TYPE    MyISAM;

CREATE INDEX feature_name on cmap_feature (feature_name);

CREATE INDEX feature_id_map_id on cmap_feature (feature_id, map_id);

CREATE INDEX feature_id_map_id_start on cmap_feature (feature_id, map_id, feature_start);

CREATE INDEX map_id on cmap_feature (map_id);

CREATE INDEX map_id_feature_id on cmap_feature (map_id, feature_id);

--
-- Table: cmap_feature_alias
--

CREATE TABLE cmap_feature_alias (
  feature_alias_id number(11) DEFAULT '0' NOT NULL,
  feature_id number(11) DEFAULT '0' NOT NULL,
  alias varchar2(255) DEFAULT NULL,
  PRIMARY KEY (feature_alias_id),
  CONSTRAINT feature_id_2 UNIQUE (feature_id, alias)
)
TYPE    MyISAM;

CREATE INDEX feature_id on cmap_feature_alias (feature_id);

CREATE INDEX alias on cmap_feature_alias (alias);

--
-- Table: cmap_feature_correspondence
--

CREATE TABLE cmap_feature_correspondence (
  feature_correspondence_id number(11) DEFAULT '0' NOT NULL,
  feature_correspondence_acc varchar2(30) DEFAULT '' NOT NULL,
  feature_id1 number(11) DEFAULT '0' NOT NULL,
  feature_id2 number(11) DEFAULT '0' NOT NULL,
  is_enabled number(4) DEFAULT '1' NOT NULL,
  PRIMARY KEY (feature_correspondence_id),
  CONSTRAINT feature_correspondence_acc UNIQUE (feature_correspondence_acc)
)
TYPE    MyISAM;

CREATE INDEX feature_id101 on cmap_feature_correspondence (feature_id1);

CREATE INDEX cmap_feature_corresp_idx on cmap_feature_correspondence (is_enabled, feature_correspondence_id);

--
-- View: cmap_correspondence_lookup
--
CREATE VIEW cmap_correspondence_lookup AS
  SELECT
    cmap_feature_correspondence.feature_id1 AS feature_id1, 
    cmap_feature_correspondence.feature_id2 AS feature_id2,
    cmap_feature_correspondence.feature_correspondence_id AS feature_correspondence_id,
    cf1.feature_start AS feature_start1,
    cf2.feature_start AS feature_start2,
    cf1.feature_stop AS feature_stop1,
    cf2.feature_stop AS feature_stop2,
    cf1.map_id AS map_id1,
    cf2.map_id AS map_id2,
    cf1.feature_type_acc AS feature_type_acc1,
    cf2.feature_type_acc AS feature_type_acc2
   FROM cmap_feature_correspondence 
   JOIN cmap_feature cf1
     ON cmap_feature_correspondence.feature_id1 = cf1.feature_id
   JOIN cmap_feature cf2
     ON cmap_feature_correspondence.feature_id2 = cf2.feature_id
UNION ALL
  SELECT
    cmap_feature_correspondence.feature_id2 AS feature_id2, 
    cmap_feature_correspondence.feature_id1 AS feature_id1,
    cmap_feature_correspondence.feature_correspondence_id AS feature_correspondence_id,
    cf1.feature_start AS feature_start1,
    cf2.feature_start AS feature_start2,
    cf1.feature_stop AS feature_stop1,
    cf2.feature_stop AS feature_stop2,
    cf1.map_id AS map_id1,
    cf2.map_id AS map_id2,
    cf1.feature_type_acc AS feature_type_acc1,
    cf2.feature_type_acc AS feature_type_acc2
   FROM cmap_feature_correspondence 
   JOIN cmap_feature cf1
     ON cmap_feature_correspondence.feature_id2 = cf1.feature_id
   JOIN cmap_feature cf2
     ON cmap_feature_correspondence.feature_id1 = cf2.feature_id;

--
-- Table: cmap_map
--

CREATE TABLE cmap_map (
  map_id number(11) DEFAULT '0' NOT NULL,
  map_acc varchar2(30) DEFAULT '' NOT NULL,
  map_set_id number(11) DEFAULT '0' NOT NULL,
  map_name varchar2(32) DEFAULT '' NOT NULL,
  display_order number(11) DEFAULT '1' NOT NULL,
  map_start number(11, 2) DEFAULT NULL,
  map_stop number(11, 2) DEFAULT NULL,
  PRIMARY KEY (map_id),
  CONSTRAINT map_acc UNIQUE (map_acc),
  CONSTRAINT map_id UNIQUE (map_id, map_set_id, map_name, map_acc)
)
TYPE    MyISAM;

CREATE INDEX map_set_id_index on cmap_map (map_set_id);

--
-- Table: cmap_map_set
--

CREATE TABLE cmap_map_set (
  map_set_id number(11) DEFAULT '0' NOT NULL,
  map_set_acc varchar2(30) DEFAULT '' NOT NULL,
  map_set_name varchar2(64) DEFAULT '' NOT NULL,
  map_set_short_name varchar2(30) DEFAULT '' NOT NULL,
  map_type_acc varchar2(30) DEFAULT '0' NOT NULL,
  species_id number(11) DEFAULT '0' NOT NULL,
  published_on date DEFAULT NULL,
  display_order number(11) DEFAULT '1' NOT NULL,
  is_enabled number(4) DEFAULT '1' NOT NULL,
  shape varchar2(12) DEFAULT NULL,
  color varchar2(20) DEFAULT NULL,
  width number(11) DEFAULT NULL,
  map_units varchar2(12) DEFAULT '' NOT NULL,
  is_relational_map number(11) DEFAULT '0' NOT NULL,
  PRIMARY KEY (map_set_id),
  CONSTRAINT map_set_acc UNIQUE (map_set_acc),
  CONSTRAINT map_set_id UNIQUE (map_set_id, species_id, map_set_short_name, map_set_acc)
)
TYPE    MyISAM;

CREATE INDEX cmap_map_set_idx on cmap_map_set (is_relational_map, is_enabled, species_id, display_order, published_on, map_set_short_name);

--
-- Table: cmap_next_number
--

CREATE TABLE cmap_next_number (
  table_name varchar2(40) DEFAULT '' NOT NULL,
  next_number number(11) DEFAULT '0' NOT NULL,
  PRIMARY KEY (table_name)
)
TYPE    MyISAM;

--
-- Table: cmap_species
--

CREATE TABLE cmap_species (
  species_id number(11) DEFAULT '0' NOT NULL,
  species_acc varchar2(30) DEFAULT '' NOT NULL,
  species_common_name varchar2(64) DEFAULT '' NOT NULL,
  species_full_name varchar2(64) DEFAULT '' NOT NULL,
  display_order number(11) DEFAULT '1' NOT NULL,
  PRIMARY KEY (species_id),
  CONSTRAINT species_acc UNIQUE (species_acc)
)
TYPE    MyISAM;

CREATE INDEX acc_id_species_id on cmap_species (species_acc, species_id);

--
-- Table: cmap_xref
--

CREATE TABLE cmap_xref (
  xref_id number(11) DEFAULT '0' NOT NULL,
  table_name varchar2(30) DEFAULT '' NOT NULL,
  object_id number(11) DEFAULT NULL,
  display_order number(11) DEFAULT '1' NOT NULL,
  xref_name varchar2(200) DEFAULT '' NOT NULL,
  xref_url clob NOT NULL,
  PRIMARY KEY (xref_id)
)
TYPE    MyISAM;

CREATE INDEX table_name01 on cmap_xref (table_name, object_id, display_order);

--
-- Table: cmap_map_to_feature
--

CREATE TABLE cmap_map_to_feature (
  map_id number(11) DEFAULT '0' NOT NULL,
  map_acc varchar2(30) DEFAULT '' NOT NULL,
  feature_id number(11) DEFAULT '0' NOT NULL,
  feature_acc varchar2(30) DEFAULT '' NOT NULL
)
TYPE    MyISAM;

CREATE INDEX map_id01 on cmap_map_to_feature (map_id);

CREATE INDEX feature_id01 on cmap_map_to_feature (feature_id);

--
-- Table: cmap_transaction
--

CREATE TABLE cmap_transaction (
  transaction_id number(11) DEFAULT '0' NOT NULL,
  transaction_date date DEFAULT NULL,
  PRIMARY KEY (transaction_id)
)
TYPE    MyISAM;

--
-- Table: cmap_commit_log
--

CREATE TABLE cmap_commit_log (
  commit_log_id number(11) DEFAULT '0' NOT NULL,
  species_id number(11) DEFAULT '0' NOT NULL,
  species_acc varchar2(30) DEFAULT '' NOT NULL,
  map_set_id number(11) DEFAULT '0' NOT NULL,
  map_set_acc varchar2(30) DEFAULT '' NOT NULL,
  map_id number(11) DEFAULT '0' NOT NULL,
  map_acc varchar2(30) DEFAULT '' NOT NULL,
  commit_type varchar2(200) DEFAULT '' NOT NULL,
  commit_text varchar2(200) DEFAULT '' NOT NULL,
  commit_object clob NOT NULL,
  commit_date date DEFAULT NULL,
  transaction_id number(11) DEFAULT '0' NOT NULL,
  PRIMARY KEY (commit_log_id)
)
TYPE    MyISAM;

--
-- View: cmap_correspondence_matrix
--

CREATE VIEW cmap_correspondence_matrix AS
  SELECT map1.map_acc         AS reference_map_acc,
         map1.map_name        AS reference_map_name,
         ms1.map_set_acc      AS reference_map_set_acc,
         s1.species_acc       AS reference_species_acc,
         map2.map_acc         AS link_map_acc,
         map2.map_name        AS link_map_name,
         ms2.map_set_acc      AS link_map_set_acc,
         s2.species_acc       AS link_species_acc,
         COUNT(f2.feature_id) AS no_correspondences
    FROM cmap_species s1 
    JOIN cmap_map_set ms1              ON ms1.species_id = s1.species_id
    JOIN cmap_map map1                 ON map1.map_set_id = ms1.map_set_id
    JOIN cmap_feature f1               ON f1.map_id = map1.map_id
    JOIN cmap_correspondence_lookup cl ON cl.feature_id1 = f1.feature_id
    JOIN cmap_feature f2               ON f2.feature_id = cl.feature_id2
    JOIN cmap_map map2                 ON map2.map_id = f2.map_id
    JOIN cmap_map_set ms2              ON ms2.map_set_id = map2.map_set_id
    JOIN cmap_species s2               ON s2.species_id = ms2.species_id
    JOIN cmap_feature_correspondence fc 
      ON fc.feature_correspondence_id = cl.feature_correspondence_id
   WHERE ms1.is_relational_map = 0
     AND cl.feature_correspondence_id = fc.feature_correspondence_id
     AND fc.is_enabled=1
     AND ((f2.map_id <> f1.map_id AND ms2.is_relational_map = 0)
         OR ms2.is_relational_map = 1)
  GROUP BY map1.map_acc, map2.map_acc;
