-- 
-- Created by SQL::Translator::Producer::MySQL
-- Created on Thu Sep 25 10:35:05 2003
-- 
SET foreign_key_checks=0;

--
-- Table: cmap_correspondence_evidence
--
DROP TABLE IF EXISTS cmap_correspondence_evidence;
CREATE TABLE cmap_correspondence_evidence (
  correspondence_evidence_id integer(11) NOT NULL DEFAULT '0',
  accession_id varchar(20) NOT NULL DEFAULT '',
  feature_correspondence_id integer(11) NOT NULL DEFAULT '0',
  evidence_type_id integer(11) NOT NULL DEFAULT '0',
  score double(8, 2) DEFAULT NULL,
  remark varchar(100) DEFAULT NULL,
  INDEX feature_correspondence_id (feature_correspondence_id, evidence_type_id),
  PRIMARY KEY (correspondence_evidence_id),
  UNIQUE (accession_id)
);

--
-- Table: cmap_correspondence_lookup
--
DROP TABLE IF EXISTS cmap_correspondence_lookup;
CREATE TABLE cmap_correspondence_lookup (
  feature_id1 integer(11) DEFAULT NULL,
  feature_id2 integer(11) DEFAULT NULL,
  feature_correspondence_id integer(11) DEFAULT NULL,
  INDEX feature_id1 (feature_id1),
  INDEX corr_id (feature_correspondence_id)
);

--
-- Table: cmap_correspondence_matrix
--
DROP TABLE IF EXISTS cmap_correspondence_matrix;
CREATE TABLE cmap_correspondence_matrix (
  reference_map_aid varchar(20) NOT NULL DEFAULT '0',
  reference_map_name varchar(32) NOT NULL DEFAULT '',
  reference_map_set_aid varchar(20) NOT NULL DEFAULT '0',
  reference_species_aid varchar(20) NOT NULL DEFAULT '0',
  link_map_aid varchar(20) DEFAULT NULL,
  link_map_name varchar(32) DEFAULT NULL,
  link_map_set_aid varchar(20) NOT NULL DEFAULT '0',
  link_species_aid varchar(20) NOT NULL DEFAULT '0',
  no_correspondences integer(11) NOT NULL DEFAULT '0'
);

--
-- Table: cmap_dbxref
--
DROP TABLE IF EXISTS cmap_dbxref;
CREATE TABLE cmap_dbxref (
  dbxref_id integer(11) NOT NULL DEFAULT '0',
  map_set_id integer(11) DEFAULT NULL,
  feature_type_id integer(11) DEFAULT NULL,
  species_id integer(11) DEFAULT NULL,
  dbxref_name varchar(32) DEFAULT NULL,
  url varchar(200) NOT NULL DEFAULT '',
  PRIMARY KEY (dbxref_id)
);

--
-- Table: cmap_evidence_type
--
DROP TABLE IF EXISTS cmap_evidence_type;
CREATE TABLE cmap_evidence_type (
  evidence_type_id integer(11) NOT NULL DEFAULT '0',
  accession_id varchar(20) NOT NULL DEFAULT '',
  evidence_type varchar(30) NOT NULL DEFAULT '',
  rank integer(11) NOT NULL DEFAULT '0',
  line_color varchar(20) DEFAULT NULL,
  PRIMARY KEY (evidence_type_id),
  UNIQUE (accession_id),
  UNIQUE (rank)
);

--
-- Table: cmap_feature
--
DROP TABLE IF EXISTS cmap_feature;
CREATE TABLE cmap_feature (
  feature_id integer(11) NOT NULL DEFAULT '0',
  accession_id varchar(20) NOT NULL DEFAULT '',
  map_id integer(11) NOT NULL DEFAULT '0',
  feature_type_id integer(11) NOT NULL DEFAULT '0',
  feature_name varchar(32) NOT NULL DEFAULT '',
  alternate_name varchar(32) DEFAULT NULL,
  is_landmark tinyint(4) NOT NULL DEFAULT '0',
  start_position double(11, 2) NOT NULL DEFAULT '0.00',
  stop_position double(11, 2) DEFAULT NULL,
  dbxref_name varchar(32) DEFAULT NULL,
  dbxref_url varchar(200) DEFAULT NULL,
  INDEX feature_name (feature_name),
  INDEX alternate_name (alternate_name),
  INDEX feature_id_map_id (feature_id, map_id),
  INDEX feature_id_map_id_start (feature_id, map_id, start_position),
  INDEX map_id (map_id),
  PRIMARY KEY (feature_id),
  UNIQUE (accession_id)
);

--
-- Table: cmap_feature_correspondence
--
DROP TABLE IF EXISTS cmap_feature_correspondence;
CREATE TABLE cmap_feature_correspondence (
  feature_correspondence_id integer(11) NOT NULL DEFAULT '0',
  accession_id varchar(20) NOT NULL DEFAULT '',
  feature_id1 integer(11) NOT NULL DEFAULT '0',
  feature_id2 integer(11) NOT NULL DEFAULT '0',
  is_enabled tinyint(4) NOT NULL DEFAULT '1',
  INDEX feature_id1 (feature_id1),
  INDEX cmap_feature_corresp_idx (is_enabled, feature_correspondence_id),
  PRIMARY KEY (feature_correspondence_id),
  UNIQUE (accession_id)
);

--
-- Table: cmap_feature_note
--
DROP TABLE IF EXISTS cmap_feature_note;
CREATE TABLE cmap_feature_note (
  feature_id integer(11) NOT NULL DEFAULT '0',
  note text(65535),
  PRIMARY KEY (feature_id)
);

--
-- Table: cmap_feature_type
--
DROP TABLE IF EXISTS cmap_feature_type;
CREATE TABLE cmap_feature_type (
  feature_type_id integer(11) NOT NULL DEFAULT '0',
  accession_id varchar(20) NOT NULL DEFAULT '',
  feature_type varchar(32) NOT NULL DEFAULT '',
  default_rank integer(11) NOT NULL DEFAULT '1',
  shape varchar(12) DEFAULT NULL,
  color varchar(20) DEFAULT NULL,
  drawing_lane integer(11) NOT NULL DEFAULT '1',
  drawing_priority integer(11) NOT NULL DEFAULT '1',
  description text(65535),
  PRIMARY KEY (feature_type_id),
  UNIQUE (accession_id)
);

--
-- Table: cmap_map
--
DROP TABLE IF EXISTS cmap_map;
CREATE TABLE cmap_map (
  map_id integer(11) NOT NULL DEFAULT '0',
  accession_id varchar(20) NOT NULL DEFAULT '',
  map_set_id integer(11) NOT NULL DEFAULT '0',
  map_name varchar(32) NOT NULL DEFAULT '',
  display_order integer(11) NOT NULL DEFAULT '1',
  start_position double(11, 2) DEFAULT NULL,
  stop_position double(11, 2) DEFAULT NULL,
  PRIMARY KEY (map_id),
  UNIQUE (accession_id)
);

--
-- Table: cmap_map_cache
--
DROP TABLE IF EXISTS cmap_map_cache;
CREATE TABLE cmap_map_cache (
  pid integer(11) NOT NULL DEFAULT '0',
  slot_no smallint(6) NOT NULL DEFAULT '0',
  map_id integer(11) NOT NULL DEFAULT '0',
  start_position double(11, 2) DEFAULT NULL,
  stop_position double(11, 2) DEFAULT NULL,
  requested_on timestamp NOT NULL,
  INDEX pid_cmap_map_cache (pid, slot_no, map_id)
);

--
-- Table: cmap_map_set
--
DROP TABLE IF EXISTS cmap_map_set;
CREATE TABLE cmap_map_set (
  map_set_id integer(11) NOT NULL DEFAULT '0',
  accession_id varchar(20) NOT NULL DEFAULT '',
  map_set_name varchar(64) NOT NULL DEFAULT '',
  short_name varchar(30) NOT NULL DEFAULT '',
  map_type_id integer(11) NOT NULL DEFAULT '0',
  species_id integer(11) NOT NULL DEFAULT '0',
  published_on date DEFAULT NULL,
  can_be_reference_map tinyint(4) NOT NULL DEFAULT '1',
  display_order integer(11) NOT NULL DEFAULT '1',
  is_enabled tinyint(4) NOT NULL DEFAULT '1',
  remarks text(65535),
  shape varchar(12) DEFAULT NULL,
  color varchar(20) DEFAULT NULL,
  width integer(11) DEFAULT NULL,
  INDEX cmap_map_set_idx (can_be_reference_map, is_enabled, species_id, display_order, published_on, short_name),
  PRIMARY KEY (map_set_id),
  UNIQUE (accession_id)
);

--
-- Table: cmap_map_type
--
DROP TABLE IF EXISTS cmap_map_type;
CREATE TABLE cmap_map_type (
  map_type_id integer(11) NOT NULL DEFAULT '0',
  accession_id varchar(20) NOT NULL DEFAULT '',
  map_type varchar(64) NOT NULL DEFAULT '',
  map_units varchar(12) NOT NULL DEFAULT '',
  is_relational_map tinyint(11) NOT NULL DEFAULT '0',
  shape varchar(12) DEFAULT NULL,
  color varchar(20) DEFAULT NULL,
  width integer(11) DEFAULT NULL,
  display_order integer(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (map_type_id),
  UNIQUE (map_type),
  UNIQUE (accession_id)
);

--
-- Table: cmap_next_number
--
DROP TABLE IF EXISTS cmap_next_number;
CREATE TABLE cmap_next_number (
  table_name varchar(40) NOT NULL DEFAULT '',
  next_number integer(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (table_name)
);

--
-- Table: cmap_species
--
DROP TABLE IF EXISTS cmap_species;
CREATE TABLE cmap_species (
  species_id integer(11) NOT NULL DEFAULT '0',
  accession_id varchar(20) NOT NULL DEFAULT '',
  common_name varchar(64) NOT NULL DEFAULT '',
  full_name varchar(64) NOT NULL DEFAULT '',
  display_order integer(11) NOT NULL DEFAULT '1',
  ncbi_taxon_id integer(11) DEFAULT NULL,
  INDEX acc_id_species_id (accession_id, species_id),
  PRIMARY KEY (species_id)
);

