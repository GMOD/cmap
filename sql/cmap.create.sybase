-- 
-- Created by SQL::Translator::Producer::Sybase
-- Created on Thu Jun  2 23:37:27 2005
-- 
--
-- Table: cmap_attribute
--

-- MySQL dump 8.23

-- Host: localhost    Database: CMAPTEST

-- -------------------------------------------------------

-- Server version	4.0.16-standard-log

-- Table structure for table `cmap_attribute`

CREATE TABLE cmap_attribute (
  attribute_id numeric(11) DEFAULT '0' NOT NULL,
  table_name varchar(30) DEFAULT '' NOT NULL,
  object_id numeric(11) DEFAULT '0' NOT NULL,
  display_order numeric(11) DEFAULT '1' NOT NULL,
  is_public smallint(4) DEFAULT '1' NOT NULL,
  attribute_name varchar(200) DEFAULT '' NOT NULL,
  attribute_value varchar(65535) NOT NULL,
  CONSTRAINT pk_cmap_attribute PRIMARY KEY (attribute_id)
);

CREATE INDEX table_name ON cmap_attribute (table_name, object_id, display_order, attribute_name);

--
-- Table: cmap_correspondence_evidence
--

-- Table structure for table `cmap_correspondence_evidence`

CREATE TABLE cmap_correspondence_evidence (
  correspondence_evidence_id numeric(11) DEFAULT '0' NOT NULL,
  correspondence_evidence_acc varchar(20) DEFAULT '' NOT NULL,
  feature_correspondence_id numeric(11) DEFAULT '0' NOT NULL,
  evidence_type_acc varchar(20) DEFAULT '0' NOT NULL,
  score double(8,2) DEFAULT NULL NULL,
  rank numeric(11) DEFAULT '0' NOT NULL,
  CONSTRAINT pk_cmap_correspondence_evidenc PRIMARY KEY (correspondence_evidence_id),
  CONSTRAINT correspondence_evidence_acc UNIQUE (correspondence_evidence_acc)
);

CREATE INDEX feature_correspondence_id ON cmap_correspondence_evidence (feature_correspondence_id);

--
-- Table: cmap_correspondence_lookup
--

-- Table structure for table `cmap_correspondence_lookup`

CREATE TABLE cmap_correspondence_lookup (
  feature_id1 numeric(11) DEFAULT NULL NULL,
  feature_id2 numeric(11) DEFAULT NULL NULL,
  feature_correspondence_id numeric(11) DEFAULT NULL NULL,
  feature_start1 double(11,2) DEFAULT NULL NULL,
  feature_start2 double(11,2) DEFAULT NULL NULL,
  feature_stop1 double(11,2) DEFAULT NULL NULL,
  feature_stop2 double(11,2) DEFAULT NULL NULL,
  map_id1 numeric(11) DEFAULT NULL NULL,
  map_id2 numeric(11) DEFAULT NULL NULL,
  feature_type_acc1 varchar(20) DEFAULT NULL NULL,
  feature_type_acc2 varchar(20) DEFAULT NULL NULL
);

CREATE INDEX feature_id1 ON cmap_correspondence_lookup (feature_id1);

CREATE INDEX corr_id ON cmap_correspondence_lookup (feature_correspondence_id);

CREATE INDEX cl_map_id1 ON cmap_correspondence_lookup (map_id1);

CREATE INDEX cl_map_id2 ON cmap_correspondence_lookup (map_id2);

CREATE INDEX cl_map_id1_map_id2 ON cmap_correspondence_lookup (map_id1, map_id2);

CREATE INDEX cl_map_id2_map_id1 ON cmap_correspondence_lookup (map_id2, map_id1);

--
-- Table: cmap_correspondence_matrix
--

-- Table structure for table `cmap_correspondence_matrix`

CREATE TABLE cmap_correspondence_matrix (
  reference_map_acc varchar(20) DEFAULT '0' NOT NULL,
  reference_map_name varchar(32) DEFAULT '' NOT NULL,
  reference_map_set_acc varchar(20) DEFAULT '0' NOT NULL,
  reference_species_acc varchar(20) DEFAULT '0' NOT NULL,
  link_map_acc varchar(20) DEFAULT NULL NULL,
  link_map_name varchar(32) DEFAULT NULL NULL,
  link_map_set_acc varchar(20) DEFAULT '0' NOT NULL,
  link_species_acc varchar(20) DEFAULT '0' NOT NULL,
  no_correspondences numeric(11) DEFAULT '0' NOT NULL
);

--
-- Table: cmap_feature
--

-- Table structure for table `cmap_feature`

CREATE TABLE cmap_feature (
  feature_id numeric(11) DEFAULT '0' NOT NULL,
  feature_acc varchar(20) DEFAULT '' NOT NULL,
  map_id numeric(11) DEFAULT '0' NOT NULL,
  feature_type_acc varchar(20) DEFAULT '0' NOT NULL,
  feature_name varchar(32) DEFAULT '' NOT NULL,
  is_landmark smallint(4) DEFAULT '0' NOT NULL,
  feature_start double(11,2) DEFAULT '0.00' NOT NULL,
  feature_stop double(11,2) DEFAULT NULL NULL,
  default_rank numeric(11) DEFAULT '1' NOT NULL,
  direction smallint(4) DEFAULT '1' NOT NULL,
  CONSTRAINT pk_cmap_feature PRIMARY KEY (feature_id),
  CONSTRAINT feature_acc UNIQUE (feature_acc)
);

CREATE INDEX feature_name ON cmap_feature (feature_name);

CREATE INDEX feature_id_map_id ON cmap_feature (feature_id, map_id);

CREATE INDEX feature_id_map_id_start ON cmap_feature (feature_id, map_id, feature_start);

CREATE INDEX map_id ON cmap_feature (map_id);

CREATE INDEX map_id_feature_id ON cmap_feature (map_id, feature_id);

--
-- Table: cmap_feature_alias
--

-- Table structure for table `cmap_feature_alias`

CREATE TABLE cmap_feature_alias (
  feature_alias_id numeric(11) DEFAULT '0' NOT NULL,
  feature_id numeric(11) DEFAULT '0' NOT NULL,
  alias varchar(255) DEFAULT NULL NULL,
  CONSTRAINT pk_cmap_feature_alias PRIMARY KEY (feature_alias_id),
  CONSTRAINT feature_id_2 UNIQUE (feature_id, alias)
);

CREATE INDEX feature_id ON cmap_feature_alias (feature_id);

CREATE INDEX alias ON cmap_feature_alias (alias);

--
-- Table: cmap_feature_correspondence
--

-- Table structure for table `cmap_feature_correspondence`

CREATE TABLE cmap_feature_correspondence (
  feature_correspondence_id numeric(11) DEFAULT '0' NOT NULL,
  feature_correspondence_acc varchar(20) DEFAULT '' NOT NULL,
  feature_id1 numeric(11) DEFAULT '0' NOT NULL,
  feature_id2 numeric(11) DEFAULT '0' NOT NULL,
  is_enabled smallint(4) DEFAULT '1' NOT NULL,
  CONSTRAINT pk_cmap_feature_correspondence PRIMARY KEY (feature_correspondence_id),
  CONSTRAINT feature_correspondence_acc UNIQUE (feature_correspondence_acc)
);

CREATE INDEX feature_id1 ON cmap_feature_correspondence (feature_id1);

CREATE INDEX cmap_feature_corresp_idx ON cmap_feature_correspondence (is_enabled, feature_correspondence_id);

--
-- Table: cmap_map
--

-- Table structure for table `cmap_map`

CREATE TABLE cmap_map (
  map_id numeric(11) DEFAULT '0' NOT NULL,
  map_acc varchar(20) DEFAULT '' NOT NULL,
  map_set_id numeric(11) DEFAULT '0' NOT NULL,
  map_name varchar(32) DEFAULT '' NOT NULL,
  display_order numeric(11) DEFAULT '1' NOT NULL,
  map_start double(11,2) DEFAULT NULL NULL,
  map_stop double(11,2) DEFAULT NULL NULL,
  CONSTRAINT pk_cmap_map PRIMARY KEY (map_id),
  CONSTRAINT map_acc UNIQUE (map_acc),
  CONSTRAINT map_id UNIQUE (map_id, map_set_id, map_name, map_acc)
);

CREATE INDEX map_set_id_index ON cmap_map (map_set_id);

--
-- Table: cmap_map_set
--

-- Table structure for table `cmap_map_set`

CREATE TABLE cmap_map_set (
  map_set_id numeric(11) DEFAULT '0' NOT NULL,
  map_set_acc varchar(20) DEFAULT '' NOT NULL,
  map_set_name varchar(64) DEFAULT '' NOT NULL,
  map_set_short_name varchar(30) DEFAULT '' NOT NULL,
  map_type_acc varchar(20) DEFAULT '0' NOT NULL,
  species_id numeric(11) DEFAULT '0' NOT NULL,
  published_on date DEFAULT NULL NULL,
  display_order numeric(11) DEFAULT '1' NOT NULL,
  is_enabled smallint(4) DEFAULT '1' NOT NULL,
  shape varchar(12) DEFAULT NULL NULL,
  color varchar(20) DEFAULT NULL NULL,
  width numeric(11) DEFAULT NULL NULL,
  map_units varchar(12) DEFAULT '' NOT NULL,
  is_relational_map smallint(11) DEFAULT '0' NOT NULL,
  CONSTRAINT pk_cmap_map_set PRIMARY KEY (map_set_id),
  CONSTRAINT map_set_acc UNIQUE (map_set_acc),
  CONSTRAINT map_set_id UNIQUE (map_set_id, species_id, map_set_short_name, map_set_acc)
);

CREATE INDEX cmap_map_set_idx ON cmap_map_set (is_relational_map, is_enabled, species_id, display_order, published_on, map_set_short_name);

--
-- Table: cmap_next_number
--

-- Table structure for table `cmap_next_number`

CREATE TABLE cmap_next_number (
  table_name varchar(40) DEFAULT '' NOT NULL,
  next_number numeric(11) DEFAULT '0' NOT NULL,
  CONSTRAINT pk_cmap_next_number PRIMARY KEY (table_name)
);

--
-- Table: cmap_species
--

-- Table structure for table `cmap_species`

CREATE TABLE cmap_species (
  species_id numeric(11) DEFAULT '0' NOT NULL,
  species_acc varchar(20) DEFAULT '' NOT NULL,
  species_common_name varchar(64) DEFAULT '' NOT NULL,
  species_full_name varchar(64) DEFAULT '' NOT NULL,
  display_order numeric(11) DEFAULT '1' NOT NULL,
  CONSTRAINT pk_cmap_species PRIMARY KEY (species_id),
  CONSTRAINT species_acc UNIQUE (species_acc)
);

CREATE INDEX acc_id_species_id ON cmap_species (species_acc, species_id);

--
-- Table: cmap_xref
--

-- Table structure for table `cmap_xref`

CREATE TABLE cmap_xref (
  xref_id numeric(11) DEFAULT '0' NOT NULL,
  table_name varchar(30) DEFAULT '' NOT NULL,
  object_id numeric(11) DEFAULT NULL NULL,
  display_order numeric(11) DEFAULT '1' NOT NULL,
  xref_name varchar(200) DEFAULT '' NOT NULL,
  xref_url varchar(65535) NOT NULL,
  CONSTRAINT pk_cmap_xref PRIMARY KEY (xref_id)
);

CREATE INDEX table_name ON cmap_xref (table_name, object_id, display_order);

